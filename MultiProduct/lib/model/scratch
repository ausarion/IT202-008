<?php
ini_set('display_errors',1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
session_start();

if(isset($_POST['email']) && isset($_POST['password']) && !empty($_POST['password'])){
	$pass = $_POST['password'];
	$email = $_POST['email'];

	//let's hash it
	//$pass = password_hash($pass, PASSWORD_BCRYPT);
	//echo "<br>$pass<br>";
	//it's hashed
	require("config.php");

    $connection_string = "mysql:host=$dbhost;dbname=$dbdatabase;charset=utf8mb4";

	try {

		$db = new PDO($connection_string, $dbuser, $dbpass);
		$stmt = $db->prepare("SELECT id, email, password from `NewUsers` where email= :email LIMIT 1");

    $params = array(":email"=> $email);
    $stmt->execute($params);
		$result = $stmt->fetch(PDO::FETCH_ASSOC);
		echo "<pre>" . var_export($stmt->errorInfo(), true) . "</pre>";
		if($result){
			$userpassword = $result['password'];
			//this is the wrong way
			//$pass = password_hash($pass, PASSWORD_BCRYPT);
			//if($pass == $userpassword)
			//this is the correct way (please lookup password_verify online)
			if(password_verify($pass, $userpassword)){
				echo "You logged in with id of " . $result['id'];
				echo "<pre>" . var_export($result, true) . "</pre>";
				$user = array(
                                        "id"=>$result['id'],
					"email"=>$result['email']);
				$_SESSION['user'] = $user;
				echo "Session: <pre>" . var_export($_SESSION, true) . "</pre>";
			}
			else{
				echo "Failed to login, invalid password";
			}
		}
		else{
			echo "Invalid email";
		}
	}
	catch(Exception $e){
		echo $e->getMessage();
		exit();

        }

}
?>



<form action="/action_page.php">
  <div class="container">
    <h1>Register</h1>
    <p>Please fill in this form to create an account.</p>
    <hr>

    <label for="email"><b>Email</b></label>
    <input type="text" placeholder="Enter Email" name="email" required>

    <label for="psw"><b>Password</b></label>
    <input type="password" placeholder="Enter Password" name="psw" required>

    <label for="psw-repeat"><b>Repeat Password</b></label>
    <input type="password" placeholder="Repeat Password" name="psw-repeat" required>
    <hr>
    <p>By creating an account you agree to our <a href="#">Terms & Privacy</a>.</p>

    <button type="submit" class="registerbtn">Register</button>
  </div>

  <div class="container signin">
    <p>Already have an account? <a href="#">Sign in</a>.</p>
  </div>
</form>


<form name="regform" action="login.php" id="myForm" method="POST"  onsubmit="return verifyPasswords(this)">
                <center><table border="2" width="325" height="100">
                <tr>
                <td align= "center" colspan="3" bgcolor="gray">New User's Register</td>
                </tr>
                <tr>
                <td><label for= "email">Email:</td><td><input type="email"id="email" name="email"placeholder="Enter Email"/></td>
                </tr>
                <span id="email_error"></span>
                <tr>
                <td><label for="pass">Password:</td><td><input type="password" id="pass" name="password" placeholder="Enter password"/></td>
                </tr>
                <tr>
                <td><label for="conf">Confirm Password:</td><td></label><input type="password" id="conf" name="confirm"/></td>
                </tr>
                <tr>
                <td align="center"><input align="right" type="submit" value="Register"/><input align="right" type="reset" onclick="verifyPassword()"/></td>
                </tr>
                </table></center>
        </form>




        $stmt =$db->prepare ("SELECT id,  productName, Url FROM ProductList");
                    $productName =$_GET['productName'];
                    $Url = $_GET['Url'];
                    $params = array(":productName"=> $productName, ":Url"=> $Url);
                  		$stmt->execute($params);
                  	$result = $stmt->setFetchMode(PDO::FETCH_ASSOC);

        			echo "<pre>" . var_export($stmt->errorInfo(), true) . "</pre>";







        $productName = $_REQUEST["productName"];
        		        $stmt->bindParam(":productName", $productName);
        		        $stmt->execute();






  <?php
ini_set('display_errors',1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
session_start();

if (!isset($container)) {


}

if(isset($_GET['Username']) && isset($_GET['password']) && !empty($_GET['password'])){
    $Username = $_GET['Username'];
    $pass = $_GET['password'];

$user = $Username->login($Username, $pass);

    if($user){

        $_SESSION['user'] = $user;

        Utils::login($user);

        Utils::flash("Login successful!");

        header("Location: index.php?home");

    }

    else{

        Utils::flash("Failed to login");
   <?php

    ini_set('display_errors', 1);

    ini_set('display_startup_errors', 1);

    error_reporting(E_ALL);


    ?>
    }
//let's hash it
//$pass = password_hash($pass, PASSWORD_BCRYPT);
//echo "<br>$pass<br>";
//it's hashed

require('config.php');
$connection_string = "mysql:host=$dbhost;dbname=$dbdatabase;charset=utf8mb4";

try {

$db = new PDO($connection_string, 'root');
$stmt = $db->prepare("SELECT id, Username, password from `NewUsers` WHERE Usename= ':Username' && password= ':password'");
$params = array(":Username"=> $pass);
$stmt->execute($params);
$result = $stmt->fetch(PDO::FETCH_ASSOC);
echo "<pre>" . var_export($stmt->errorInfo(), true) . "</pre>";
if($result){
$User = $result['password'];
//this is the wrong way
//$pass = password_hash($pass, PASSWORD_BCRYPT);
//if($pass == $userpassword)
//this is the correct way (please lookup password_verify online)
if(password_verify($pass, $User)){
    $id = $result['id'];
    echo "You logged in with id of ". $id;

    $stmt->execute(array(":id"=>$id, ":Username"=>$Username, ":password"=>$pass));

    $roles = $stmt->fetchAll(PDO::FETCH_ASSOC);

    if(!$roles){

        $roles = array();

    }
$user = array(
"id"=>$result['id'],
"Username"=>$result['Username'],
"password"=>$result['password']);
$_SESSION['user'] = $user;
echo "Session: <pre>" . var_export($_SESSION, true) . "</pre>";
}
else{
echo "Failed to login, invalid password";
}
}
else{
echo "Invalid email";
}
}
catch(Exception $e){
echo $e->getMessage();
exit();

}
}

?>
